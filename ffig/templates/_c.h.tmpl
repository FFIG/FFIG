{%- import '_c.macros' as c_macros -%}
// This code was generated by FFIG <http://ffig.org>.
// Manual edits will be lost.

#pragma once

#define {{module.name}}_RC_SUCCESS 0
#define {{module.name}}_RC_FAIL 1

// FIXME: Use something nicer than _MBCS to see if we are on VS
#ifdef _MBCS
#ifdef {{class.name}}_c_EXPORTS
#define EXPORT extern "C" __declspec(dllexport)
#else
#define EXPORT extern "C" __declspec(dllimport)
#endif
#else
#define EXPORT extern "C" __attribute__((visibility("default")))
#endif

typedef const void* {{module.name}}_{{class.name}};

#ifdef __cplusplus
extern "C"
{
#endif
EXPORT void {{module.name}}_clear_error();

EXPORT const char* {{module.name}}_error();

EXPORT void {{module.name}}_{{class.name}}_dispose({{module.name}}_{{class.name}} my{{class.name}});

{% if not class.is_abstract -%}
{% for method in class.constructors %}
EXPORT int {{module.name}}_{{ class.name }}_create(
    {{c_macros.method_parameters(module, method, trailing_comma=True)}}
    {{module.name}}_{{class.name}}* rv);
{% endfor %}
{%- endif -%}

{% for method in class.methods %}
EXPORT int {{module.name}}_{{ class.name }}_{{method.name}}(
    {{module.name}}_{{class.name}} my{{class.name}}
    {%- if method.returns_void -%}
        {{c_macros.method_parameters(module, method, leading_comma=True)}}
    {%- else -%}
        {{c_macros.method_parameters(module, method, leading_comma=True, trailing_comma=False)}},
        {{method.return_type | to_c(module.name)}}* rv
    {%- endif -%}
    );
{% endfor %}

{%- for impl in impl_classes %}
{% for method in impl.constructors %}
EXPORT int {{module.name}}_{{ impl.name }}_create(
    {{c_macros.method_parameters(module, method, trailing_comma=True)}}
    {{module.name}}_{{class.name}}* rv);
{%- endfor %}
{%- endfor %}
#ifdef __cplusplus
}
#endif
