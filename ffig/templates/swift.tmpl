{% import 'swift.macros' as swift_macros %}
// This code was generated by FFIG <http://ffig.org>.
// Manual edits will be lost.

public struct {{module.name}}Error : Error {
  init()
  {
    message = String(cString:{{module.name}}_error())
    {{module.name}}_clear_error()
  }

  let message: String
}

{% for class in classes -%}
public class {{class.name}} {

  var obj_ : OpaquePointer

  public init(fromCPtr obj:OpaquePointer) {
    obj_ = obj
  }

  {% if not class.is_abstract %}
  {% for method in class.constructors %}
  convenience init({{swift_macros.method_parameters(method)}}) {
    var rv : OpaquePointer?
    {{module.name}}_{{method.name}}_create({{swift_macros.method_arguments(method,trailing_comma=True)}}&rv)
    //if rc != 0 {
    //  throw {{module.name}}Error()
    //}
    self.init(fromCPtr:rv!)
  }
  {% endfor %}
  {% endif %}

  deinit
  {
    {{module.name}}_{{class.name}}_dispose(obj_)
  }

{% for method in class.methods %}
  public func {{method.name}}({{swift_macros.method_parameters(method)}}) {% if not method.is_noexcept %}throws {% endif %}{% if not method.returns_void %}-> {{method.return_type|to_swift_return_type}}{% endif %} {
    {% if method.is_noexcept %}
    {% if method.returns_void %}
    {{module.name}}_{{class.name}}_{{method.name}}_noexcept(obj_{{swift_macros.method_arguments(method, leading_comma=True)}})
    {% else %}
    let rv = {{module.name}}_{{class.name}}_{{method.name}}_noexcept(obj_{{swift_macros.method_arguments(method, leading_comma=True)}})
    return {{method.return_type|to_swift_return_value("rv")}};
    {% endif %}
    {% else %}
    {% if method.returns_void %}
    int rc = {{module.name}}_{{class.name}}_{{method.name}}(obj_{{swift_macros.method_arguments(method, leading_comma=True)}})
    if rc != 0 {
      throw {{module.name}}Error()
    }
    {% else %}
    var rv
    int rc = {{module.name}}_{{class.name}}_{{method.name}}(obj_{{swift_macros.method_arguments(method, leading_comma=True), rv}})
    if rc != 0 {
      throw {{module.name}}Error()
    }
    return {{method.return_type|to_swift_return_value("rv")}};
    {% endif %}
    {% endif %}
  }

{% endfor %}
}

{% for impl in class.impls %}
public class {{impl.name}} : {{class.name}} {
  {% for method in impl.constructors %}
  public init({{swift_macros.method_parameters(method)}}) throws {
    var rv : OpaquePointer?
    let rc = {{module.name}}_{{method.name}}_create({{swift_macros.method_arguments(method,trailing_comma=True)}}&rv)
    if rc != 0 {
      throw {{module.name}}Error()
    }
    super.init(fromCPtr:rv!)
  }
  {% endfor %}
}
{% endfor %}
{% endfor %}
