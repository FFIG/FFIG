{% import 'swift.macros' as swift_macros %}
// This code was generated by FFIG <http://ffig.org>.
// Manual edits will be lost.

struct {{module.name}}Error : Error {
  init()
  {
    message = String(cString:{{module.name}}_error())
    {{module.name}}_clear_error()
  }

  let message: String
}

{% for class in classes -%}
class {{class.name}} {

  let obj_ : OpaquePointer

  init(obj:OpaquePointer)
  {
    obj_ = obj
  }

  deinit
  {
    {{module.name}}_{{class.name}}_dispose(obj_)
  }

{% for method in class.methods %}
  func {{method.name}}({{swift_macros.method_parameters(method)}}) {% if not method.is_noexcept %}throws{% endif %} {% if not method.returns_void %}-> {{method.return_type|to_swift_return_type}}{% endif %}
  {
    {% if method.is_noexcept %}
    {% if not method.returns_void %}let rv = {% endif %}{{module.name}}_{{class.name}}_{{method.name}}_noexcept(obj_{{swift_macros.method_arguments(method, leading_comma=True)}})
    {% else %}
    var rv
    int rc = {{module.name}}_{{class.name}}_{{method.name}}(obj_{{swift_macros.method_arguments(method, leading_comma=True), rv}})
    if rc != 0 {
      throw {{module.name}}Error() 
    }
    {% endif %}
    {% if not method.returns_void %}return rv{% endif %}
  }

{% endfor %}
}
{% endfor %}
