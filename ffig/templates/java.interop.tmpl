{% import 'java.macros' as java_macros %}
// This code was generated by FFIG <http://ffig.org>.
// Manual edits will be lost.

package {{module.name}};

import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;

interface {{module.name}}CLibrary extends Library
{
    // FIXME: Handle different OSs in code rather than in the template.
    // The JAR file should not be OS-specific.
    static {{module.name}}CLibrary INSTANCE = ({{module.name}}CLibrary)Native.loadLibrary(
        "{{module.name}}_c", {{module.name}}CLibrary.class);

    abstract void {{module.name}}_clear_error();

    abstract String {{module.name}}_error();

{% for class in classes %}
    abstract int {{module.name}}_{{class.name}}_dispose(Pointer o);
{% if not class.is_abstract %}
{% for method in class.constructors %}
    
    abstract int {{module.name}}_{{class.name}}_create({{java_macros.method_c_parameters(method, trailing_comma=True)}}PointerByReference o);
{% endfor %}
{% endif %}
{% for method in class.methods %}

    {% if not method.returns_void %}
    abstract int {{module.name}}_{{class.name}}_{{method.name}}(Pointer o, {{java_macros.method_c_parameters(method, trailing_comma=True)}}{{method.return_type|to_java_output_param}} rv);
    {% else %}
    abstract int {{module.name}}_{{class.name}}_{{method.name}}(Pointer o, {{java_macros.method_c_parameters(method)}});
    {% endif %}
{% endfor %}
{% for impl in class.impls %}
{% for method in impl.constructors %}

    abstract int {{module.name}}_{{impl.name}}_create({{java_macros.method_c_parameters(method, trailing_comma=True)}}PointerByReference o);
{% endfor %}
{% endfor %}
{% endfor %}
}
