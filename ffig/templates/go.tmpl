// This code was generated by FFIG <http://ffig.org>.
// Manual edits will be lost.

package {{module.name}}

// #cgo CFLAGS: -std=c11 -I${SRCDIR} -DSOURCE_PATH=${SRCDIR}
// #cgo LDFLAGS: -ldl
// #include "{{module.name}}.go.h"
import "C"

import (
    "os"
    "unsafe"
)

func init() {
    if status := int(C.init()); status != 0 {
        os.Exit(status)
    }
}

type {{class.name}} struct {
    ptr unsafe.Pointer
}

{% for impl in impl_classes %}
{% for method in impl.constructors %}

func {{module.name}}_{{class.name}}_{{ impl.name }}_create({% for arg in method.arguments %}{{arg.name}} {{arg.type|to_go}}{% if not loop.last %},{% endif %}{% endfor %}) ({{class.name}}, bool) {
    var pv C.RT_{{module.name}}_{{impl.name}}_create
    pv = C.CGo_{{module.name}}_{{impl.name}}_create({% for arg in method.arguments %}C.{{arg.type|to_c}}({{arg.name}}) {%if not loop.last %},{% endif %} {% endfor %})

    var obj {{class.name}}

    if pv.status == 0 {
        obj.ptr = pv.ptr
        return obj, false
    } else {
        return obj, true
    }
}

{% endfor %}
{% endfor %}

{% for method in class.methods %}
func (obj {{class.name}}) {{method.name|to_go_method_name}}({% for arg in method.arguments %}{{arg.name}} {{arg.type|to_go}}{% if not loop.last %},{% endif %}{% endfor %}) {% if not method.returns_void %}({{method.return_type|to_go}}, bool){% else %}bool{% endif %} {
    var rv C.RT_{{module.name}}_{{class.name}}_{{method.name}}
    rv = C.CGo_{{module.name}}_{{class.name}}_{{method.name}}(obj.ptr{% for arg in method.arguments %}, {{arg.name|go_object(arg.type)}}{% endfor %})
    
    if rv.status == 0 {
        {% if not method.returns_void %}
        value := {{method.return_type|to_go_convert}}(rv.value);
        return value, false
        {% else %}return rv.status{% endif %}
    } else {
        {% if not method.returns_void %}
        var value {{method.return_type|to_go}}
        return value, false
        {% else %}return rv.status{% endif %}
    }
}
{% endfor %}
